name: Build server

on:
  push:
    paths:
      - src
      - .github/workflows/build.yml
      - Cargo.toml
      - Cargo.lock
  pull_request:

jobs:
  server:
    runs-on: ubuntu-latest
    name: Build server

    steps:
      - name: Download code
        uses: actions/checkout@v2

      - name: Setup Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          override: true
      
      - name: Fetch
        run: cargo fetch --locked
      
      - name: Build
        run: cargo build --release
      
      - uses: actions/upload-artifact@v3
        name: Upload result
        with:
          name: dust-mail-server
          path: target/release/dust-mail-server
    
  docker:
    name: Build Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Setup
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: guusvanmeerveld
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build app image
        uses: docker/build-push-action@v3
        with:
          tags: |
            ghcr.io/dust-mail/server:git
          push: true
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

